{
  "language": "Cairo",
  "slug": "cairo",
  "active": false,
  "status": {
    "concept_exercises": false,
    "test_runner": false,
    "representer": false,
    "analyzer": false
  },
  "blurb": "Cairo is a general purpose language for writing ZK provable programs, without the need for a deep understanding of ZK concepts. Cairo is most often used for building trustless applications on Starknet.",
  "version": 3,
  "online_editor": {
    "indent_style": "space",
    "indent_size": 4,
    "highlightjs_language": "rust"
  },
  "test_runner": {
    "average_run_time": 2
  },
  "files": {
    "solution": [
      "src/lib.cairo",
      "Scarb.toml"
    ],
    "test": [
      "src/tests.cairo"
    ],
    "example": [
      ".meta/example.cairo"
    ],
    "exemplar": [
      ".meta/exemplar.cairo"
    ]
  },
  "exercises": {
    "concept": [],
    "practice": []
  },
  "concepts": [],
  "key_features": [],
  "tags": [
    "paradigm/functional",
    "paradigm/imperative",
    "paradigm/procedural",
    "typing/static",
    "typing/strong",
    "execution_mode/compiled",
    "platform/windows",
    "platform/mac",
    "platform/linux",
    "runtime/standalone_executable",
    "used_for/artificial_intelligence",
    "used_for/backends",
    "used_for/financial_systems",
    "used_for/games",
    "used_for/web_development"
  ]
}
